{
    "sourceFile": "JS/app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1738968910946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1738968910946,
            "name": "Commit-0",
            "content": "//NAVIGATION OVERLAY \"MENU\" BUTTON TOGGLE//\nfunction toggleOverlay() {\n    let overlay = document.getElementById(\"info-overlay\");\n    let menuButtons = document.querySelectorAll(\".menu-button\"); // Select both menu buttons\n\n    if (overlay.classList.contains(\"open\")) {\n        overlay.classList.remove(\"open\"); // Hide overlay\n        menuButtons.forEach(button => {\n            button.textContent = \"Menu\"; // Change text back to \"Menu\"\n        });\n    } else {\n        overlay.classList.add(\"open\"); // Show overlay\n        menuButtons.forEach(button => {\n            button.textContent = \"Home\"; // Change text to \"Home\"\n        });\n    }\n}\n    //LOGO IMAGERY//\n        // Array of logo images\n        const logoImages = [\n            'Logos/Cream/G_01_Cream.svg',\n            'Logos/Cream/G_02_Cream.svg',\n            'Logos/Cream/G_03_Cream.svg',\n            'Logos/Cream/G_04_Cream.svg',\n            'Logos/Cream/G_05_Cream.svg'\n        ];\n\n        // Variables to track the current image index\n        let currentImageIndex = 0;\n\n        // Function to update the logo image\n        function cycleLogo() {\n            const logo = document.getElementById('logo');\n            currentImageIndex = (currentImageIndex + 1) % logoImages.length; // Cycle to the next image\n            logo.src = logoImages[currentImageIndex];\n        }\n\n        // Check if the user is on a mobile device\n        function isMobile() {\n            return /Mobi|Android/i.test(navigator.userAgent);\n        }\n\n        // Handle logo behavior for mobile\n        if (isMobile()) {\n            // Automatically cycle through logos every 3 seconds\n            setInterval(cycleLogo, 2000);\n        } else {\n            // For non-mobile, attach the mouse movement behavior\n            let lastX = 0, lastY = 0;\n            const speedThreshold = 30;\n\n            document.addEventListener('mousemove', (event) => {\n                const distance = Math.sqrt(Math.pow(event.clientX - lastX, 2) + Math.pow(event.clientY - lastY, 2));\n                lastX = event.clientX;\n                lastY = event.clientY;\n\n                if (distance > speedThreshold) {\n                    cycleLogo();\n                }\n            });\n        }\n\n    let lastScrollTop = window.scrollY; // Store user's scroll position before submitting\n    document.getElementById(\"emailForm\").addEventListener(\"submit\", function (event) {\n    event.preventDefault(); // Prevent page reload\n\n    let emailInput = document.getElementById(\"emailInput\").value;\n    let submitButton = document.getElementById(\"submitButton\");\n    let buttonText = document.getElementById(\"buttonText\");\n    let spinner = document.getElementById(\"loadingSpinner\");\n    let checkmark = document.getElementById(\"checkmark\");\n    let statusText = document.getElementById(\"statusText\");\n    let emailContainer = document.querySelector(\".email-container\");\n\n    let googleScriptURL = \"https://script.google.com/macros/s/AKfycbwkd41HgMaJHEcNo3e8jcB5yDj5FpBDKrqC8NUQHe-BFKJdu6iHSagNS3mdkPBxm3UE/exec\";\n\n    if (emailInput.includes(\"@\") && emailInput.includes(\".\")) {\n        // Store last scroll position before locking downward scroll\n        lastScrollTop = window.scrollY;\n\n        // Show loading state\n        buttonText.style.display = \"none\";\n        spinner.style.display = \"inline-block\";\n        statusText.textContent = \"Saving...\";\n\n        fetch(googleScriptURL, {\n            method: \"POST\",\n            mode: \"no-cors\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: `email=${encodeURIComponent(emailInput)}`\n        }).then(() => {\n            // Show success message\n            spinner.style.display = \"none\";\n            checkmark.style.display = \"inline-block\";\n            statusText.textContent = \"Done\";\n\n            setTimeout(() => {\n                emailContainer.style.opacity = \"0\";\n                setTimeout(() => {\n                    emailContainer.innerHTML = `\n    <div class=\"thank-you-wrapper\">\n        <h4 class=\"thank-you-title\">THANKS FOR REACHING OUT</h4>\n        <p class=\"thank-you-message\">\n            We're excited to learn more about your venture and to determine how we can best partner with you on creating something \n            <span style=\"font-weight: 400;\">meaningful</span> and <span style=\"font-weight: 400;\">impactful.</span>\n            <br><br>We'll be in touch shortly.\n        </p>\n    </div>`;\n\n                    emailContainer.style.opacity = \"1\";\n                }, 150);\n            }, 500);\n\n            document.getElementById(\"emailInput\").value = \"\";\n\n            // **Lock scrolling downward but allow scrolling up**\n            window.addEventListener(\"scroll\", function () {\n                if (window.scrollY > lastScrollTop) {\n                    window.scrollTo(0, lastScrollTop); // Prevent scrolling down\n                }\n            });\n\n        }).catch((error) => {\n            buttonText.style.display = \"inline\";\n            spinner.style.display = \"none\";\n            statusText.textContent = \"\";\n            alert(\"An error occurred. Please try again.\");\n        });\n    } else {\n        alert(\"Please enter a valid email.\");\n    }\n});"
        }
    ]
}